{"version":3,"sources":["webpack:///./js/src/components/SPA.jsx"],"names":["Index","LoadableLogin","Loadable","loader","loading","Loading","httpLink","HttpLink","uri","configMap","secureProtocol","graphqlUrl","client","ApolloClient","link","cache","InMemoryCache","restore","window","__APOLLO_STATE__","SPA","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;CAGA;;AACA;;AAEA,SAASA,KAAT,GAAiB;AACf,SAAO,8EAAP;AACD;;AAED,IAAMC,aAAa,GAAGC,qDAAQ,CAAC;AAC7BC,QAAM,EAAE;AAAA,WAAM,6IAAN;AAAA,GADqB;AAE7BC,SAAO,EAAEC,iDAAOA;AAFa,CAAD,CAA9B;AAKA,IAAMC,QAAQ,GAAG,IAAIC,yDAAJ,CAAa;AAC5BC,KAAG,EACD,CAACC,yDAAS,CAACC,cAAV,GAA2B,UAA3B,GAAwC,SAAzC,IAAsDD,yDAAS,CAACE;AAFtC,CAAb,CAAjB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,IAAIC,qDAAJ,CAAiB;AAC9BC,MAAI,EAAER,QADwB;AAE9BS,OAAK,EAAE,IAAIC,mEAAJ,GAAoBC,OAApB,CAA4BC,MAAM,CAACC,gBAAnC;AAFuB,CAAjB,CAAf;;IAKMC,G;;;;;;;;;;;;;6BACK;AACP,aACE,2DAAC,2DAAD;AAAgB,cAAM,EAAER;AAAxB,SACE,2DAAC,2DAAD;AAAQ,gBAAQ,EAAC;AAAjB,SACE,wEACE,2DAAC,sDAAD;AAAO,YAAI,EAAC,GAAZ;AAAgB,aAAK,MAArB;AAAsB,iBAAS,EAAEZ;AAAjC,QADF,EAEE,2DAAC,sDAAD;AAAO,YAAI,EAAC,QAAZ;AAAqB,iBAAS,EAAEC;AAAhC,QAFF,CADF,CADF,CADF;AAUD;;;;EAZeoB,4CAAK,CAACC,S;;AAcTF,kEAAf,E","file":"1.concrete5_graphql_websocket_security_sample.js","sourcesContent":["import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-client\";\nimport { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport Loadable from \"react-loadable\";\nimport Loading from \"./Loading\";\n\nimport configMap from \"Utils/GetGlobals\";\n// eslint-disable-next-line no-unused-vars\nimport log from \"Log\";\n\nfunction Index() {\n  return <h2>Home</h2>;\n}\n\nconst LoadableLogin = Loadable({\n  loader: () => import(\"../single_pages/Login\"),\n  loading: Loading\n});\n\nconst httpLink = new HttpLink({\n  uri:\n    (configMap.secureProtocol ? \"https://\" : \"http://\") + configMap.graphqlUrl\n});\n\n//https://www.apollographql.com/docs/tutorial/mutations/\n// const wsLink = new WebSocketLink({\n//   uri: (configMap.secureProtocol ? \"wss://\" : \"ws:/\") + configMap.websocketUrl,\n//   options: {\n//     reconnect: true\n//   }\n// });\n\n// const link = split(\n//   ({ query }) => {\n//     const definition = getMainDefinition(query);\n//     return (\n//       definition.kind === \"OperationDefinition\" &&\n//       definition.operation === \"subscription\"\n//     );\n//   },\n//   wsLink,\n//   httpLink\n// );\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache().restore(window.__APOLLO_STATE__)\n});\n\nclass SPA extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router hashType=\"hashbang\">\n          <div>\n            <Route path=\"/\" exact component={Index} />\n            <Route path=\"/login\" component={LoadableLogin} />\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\nexport default SPA;\n"],"sourceRoot":""}