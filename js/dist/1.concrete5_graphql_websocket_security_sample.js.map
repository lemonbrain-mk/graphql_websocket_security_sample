{"version":3,"sources":["webpack:///./js/src/components/SPA.jsx"],"names":["Index","localStorage","setItem","JSON","parse","configMap","anonymusTokens","authToken","LoadableLogin","Loadable","loader","loading","Loading","httpLink","HttpLink","uri","secureProtocol","graphqlUrl","headers","authorization","getItem","cache","InMemoryCache","client","ApolloClient","link","writeData","data","isLoggedIn","SPA","log","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;CAGA;;AACA;;AAEA,SAASA,KAAT,GAAiB;AACf,SAAO,8EAAP;AACD;;AAEDC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,KAAL,CAAWC,yDAAS,CAACC,cAArB,EAAqCC,SAAnE;AAEA,IAAMC,aAAa,GAAGC,sDAAQ,CAAC;AAC7BC,QAAM,EAAE;AAAA,WAAM,6IAAN;AAAA,GADqB;AAE7BC,SAAO,EAAEC,iDAAOA;AAFa,CAAD,CAA9B;AAIA,IAAMC,QAAQ,GAAG,IAAIC,yDAAJ,CAAa;AAC5BC,KAAG,EACD,CAACV,yDAAS,CAACW,cAAV,GAA2B,UAA3B,GAAwC,SAAzC,IAAsDX,yDAAS,CAACY,UAFtC;AAG5BC,SAAO,EAAE;AAAEC,iBAAa,EAAE,YAAYlB,YAAY,CAACmB,OAAb,CAAqB,OAArB;AAA7B;AAHmB,CAAb,CAAjB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,IAAIC,mEAAJ,EAAd,C,CAAmC;;AAEnC,IAAMC,MAAM,GAAG,IAAIC,qDAAJ,CAAiB;AAC9BC,MAAI,EAAEZ,QADwB;AAE9BQ,OAAK,EAAEA;AAFuB,CAAjB,CAAf;AAKAA,KAAK,CAACK,SAAN,CAAgB;AACdC,MAAI,EAAE;AACJC,cAAU,EAAE,CAAC,CAAC3B,YAAY,CAACmB,OAAb,CAAqB,OAArB;AADV;AADQ,CAAhB;;IAMMS,G;;;;;;;;;;;;;6BACK;AACPC,0DAAG,CAAC3B,IAAI,CAACC,KAAL,CAAWC,yDAAS,CAACC,cAArB,EAAqCC,SAAtC,CAAH;AACA,aACE,2DAAC,2DAAD;AAAgB,cAAM,EAAEgB;AAAxB,SACE,2DAAC,kEAAD;AAAqB,cAAM,EAAEA;AAA7B,SACE,2DAAC,2DAAD;AAAQ,gBAAQ,EAAC;AAAjB,SACE,wEACE,2DAAC,sDAAD;AAAO,YAAI,EAAC,GAAZ;AAAgB,aAAK,MAArB;AAAsB,iBAAS,EAAEvB;AAAjC,QADF,EAEE,2DAAC,sDAAD;AAAO,YAAI,EAAC,QAAZ;AAAqB,iBAAS,EAAEQ;AAAhC,QAFF,CADF,CADF,CADF,CADF;AAYD;;;;EAfeuB,4CAAK,CAACC,S;;AAiBTH,kEAAf,E","file":"1.concrete5_graphql_websocket_security_sample.js","sourcesContent":["import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-client\";\nimport { split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\n\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"@apollo/react-hooks\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport Loadable from \"react-loadable\";\nimport Loading from \"./Loading\";\n\nimport configMap from \"Utils/GetGlobals\";\n// eslint-disable-next-line no-unused-vars\nimport log from \"Log\";\n\nfunction Index() {\n  return <h2>Home</h2>;\n}\n\nlocalStorage.setItem(\"token\", JSON.parse(configMap.anonymusTokens).authToken);\n\nconst LoadableLogin = Loadable({\n  loader: () => import(\"../single_pages/Login\"),\n  loading: Loading\n});\nconst httpLink = new HttpLink({\n  uri:\n    (configMap.secureProtocol ? \"https://\" : \"http://\") + configMap.graphqlUrl,\n  headers: { authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n});\n\n//https://www.apollographql.com/docs/tutorial/mutations/\n// const wsLink = new WebSocketLink({\n//   uri: (configMap.secureProtocol ? \"wss://\" : \"ws:/\") + configMap.websocketUrl,\n//   options: {\n//     reconnect: true\n//   }\n// });\n\n// const link = split(\n//   ({ query }) => {\n//     const definition = getMainDefinition(query);\n//     return (\n//       definition.kind === \"OperationDefinition\" &&\n//       definition.operation === \"subscription\"\n//     );\n//   },\n//   wsLink,\n//   httpLink\n// );\n\nconst cache = new InMemoryCache(); //.restore(window.__APOLLO_STATE__);\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: cache\n});\n\ncache.writeData({\n  data: {\n    isLoggedIn: !!localStorage.getItem(\"token\")\n  }\n});\n\nclass SPA extends React.Component {\n  render() {\n    log(JSON.parse(configMap.anonymusTokens).authToken);\n    return (\n      <ApolloProvider client={client}>\n        <ApolloHooksProvider client={client}>\n          <Router hashType=\"hashbang\">\n            <div>\n              <Route path=\"/\" exact component={Index} />\n              <Route path=\"/login\" component={LoadableLogin} />\n            </div>\n          </Router>\n        </ApolloHooksProvider>\n      </ApolloProvider>\n    );\n  }\n}\nexport default SPA;\n"],"sourceRoot":""}