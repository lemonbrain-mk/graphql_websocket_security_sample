{"version":3,"sources":["webpack:///./js/src/single_pages/Me.jsx"],"names":["LOGOUT","gql","ME","MeForm","props","data","me","uName","anonymus","logout","refetch","React","Component","propTypes","PropTypes","func","object","answer","bool","Me","history","useQuery","useContext","UserContext","user","setUser","useMutation","onCompleted","logoutAnswer","token","authToken","push","loading","error","useEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;CAGA;;AACA;AAEA,IAAMA,MAAM,GAAGC,kDAAH,mBAAZ;AASA,IAAMC,EAAE,GAAGD,kDAAH,oBAAR;;IASME,M;;;;;;;;;;;;;6BACO;AAAA;;AACL,aACI,wEACI,sEADJ,EAEI,sEAFJ,EAGI,sEAHJ,EAII,sEAJJ,EAKI,sEALJ,EAMI,sEANJ,EAOI,sEAPJ,EAQI,sEARJ,EASI,sEATJ,EAUI,sEAVJ,EAWI,sEAXJ,EAYI,sEAZJ,QAcI,kFACa,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,EAAhB,CAAmBC,KAArC,GAA6C,EAD1D,EAC8D,GAD9D,EAEK,KAAKH,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,EAAhB,CAAmBE,QAArC,GAAgD,EAFrD,EAGI;AACI,eAAO,EAAE,mBAAM;AACX,eAAI,CAACJ,KAAL,CAAWK,MAAX;AACH;AAHL,oBAHJ,EAUI;AACI,eAAO,EAAE,mBAAM;AACX,eAAI,CAACL,KAAL,CAAWM,OAAX;AACH;AAHL,mBAVJ,CAdJ,CADJ;AAmCH;;;;EArCgBC,4CAAK,CAACC,S;;AAwC3BT,MAAM,CAACU,SAAP,GAAmB;AACfJ,QAAM,EAAEK,iDAAS,CAACC,IADH;AAEfL,SAAO,EAAEI,iDAAS,CAACC,IAFJ;AAGfV,MAAI,EAAES,iDAAS,CAACE,MAHD;AAIfC,QAAM,EAAEH,iDAAS,CAACI;AAJH,CAAnB;AAOAC,EAAE,CAACN,SAAH,GAAe;AACXO,SAAO,EAAEN,iDAAS,CAACE;AADR,CAAf;AAIe,SAASG,EAAT,OAAyB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAAA,kBACVC,oEAAQ,CAACnB,EAAD,CADE;AAAA,MAC5BG,IAD4B,aAC5BA,IAD4B;AAAA,MACtBK,OADsB,aACtBA,OADsB;;AAAA,oBAEZY,wDAAU,CAACC,6DAAD,CAFE;AAAA;AAAA,MAE7BC,IAF6B;AAAA,MAEvBC,OAFuB;;AAAA,qBAGCC,uEAAW,CAAC1B,MAAD,EAAS;AACrD2B,eADqD,8BACf;AAAA,UAAhBC,YAAgB,SAAxBnB,MAAwB;AAClCgB,aAAO,CAAC;AAACI,aAAK,EAAED,YAAY,CAACE;AAArB,OAAD,CAAP;AACAV,aAAO,CAACW,IAAR,CAAa,QAAb;AACH;AAJoD,GAAT,CAHZ;AAAA;AAAA,MAG7BtB,MAH6B;AAAA;AAAA,MAGnBuB,OAHmB,kBAGnBA,OAHmB;AAAA,MAGVC,KAHU,kBAGVA,KAHU;;AAUpCC,yDAAS,CAAC,YAAM;AACZxB,WAAO;AACV,GAFQ,EAEN,CAACc,IAAD,CAFM,CAAT;AAIA,MAAIQ,OAAJ,EAAa,OAAO,2DAAC,2DAAD,OAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,0FAAP;AAEX,SACI,2DAAC,MAAD;AAAQ,UAAM,EAAExB,MAAhB;AAAwB,QAAI,EAAEJ,IAA9B;AAAoC,WAAO,EAAEK;AAA7C,IADJ;AAGH,C","file":"10.concrete5_graphql_websocket_security_sample.js","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport Loading from \"../components/Loading\";\nimport {UserContext} from \"Utils/UserContext\";\n\n// eslint-disable-next-line no-unused-vars\nimport log from \"Log\";\n\nconst LOGOUT = gql`\n    mutation logout {\n        logout {\n            authToken\n            error\n        }\n    }\n`;\n\nconst ME = gql`\n    query me {\n        me {\n            uName\n            anonymus\n        }\n    }\n`;\n\nclass MeForm extends React.Component {\n    render() {\n        return (\n            <div>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                Me\n                <p>\n                    Welcome {this.props.data ? this.props.data.me.uName : \"\"}{\" \"}\n                    {this.props.data ? this.props.data.me.anonymus : \"\"}\n                    <button\n                        onClick={() => {\n                            this.props.logout();\n                        }}\n                    >\n                        Sign out\n                    </button>\n                    <button\n                        onClick={() => {\n                            this.props.refetch();\n                        }}\n                    >\n                        Refetch\n                    </button>\n                </p>\n            </div>\n        );\n    }\n}\n\nMeForm.propTypes = {\n    logout: PropTypes.func,\n    refetch: PropTypes.func,\n    data: PropTypes.object,\n    answer: PropTypes.bool\n};\n\nMe.propTypes = {\n    history: PropTypes.object,\n};\n\nexport default function Me({ history }) {\n    const { data, refetch } = useQuery(ME);\n    const [user, setUser] = useContext(UserContext);\n    const [logout, { loading, error }] = useMutation(LOGOUT, {\n        onCompleted({ logout: logoutAnswer }) {\n            setUser({token: logoutAnswer.authToken});\n            history.push(\"/login\");\n        }\n    });\n\n    useEffect(() => {\n        refetch();\n    }, [user]);\n\n    if (loading) return <Loading />;\n    if (error) return <p>An error occurred</p>;\n\n    return (\n        <MeForm logout={logout} data={data} refetch={refetch} />\n    );\n}\n"],"sourceRoot":""}