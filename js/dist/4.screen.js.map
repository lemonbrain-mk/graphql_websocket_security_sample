{"version":3,"sources":["webpack:///./js/src/blocks/Menuplan.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","apollo_client__WEBPACK_IMPORTED_MODULE_1__","apollo_link_http__WEBPACK_IMPORTED_MODULE_2__","react_apollo__WEBPACK_IMPORTED_MODULE_3__","apollo_cache_inmemory__WEBPACK_IMPORTED_MODULE_4__","_loadable_component__WEBPACK_IMPORTED_MODULE_5__","Utilities_GetGlobals__WEBPACK_IMPORTED_MODULE_6__","LoadableMenuplanComponent","loadable","Promise","all","e","then","bind","fallback","a","createElement","Menuplan","httpLink","HttpLink","uri","configMap","secureProtocol","graphqlUrl","client","ApolloClient","link","cache","InMemoryCache","restore","window","__APOLLO_STATE__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAA,EAAA,IAgBA,IAAMY,EAA4BC,YAAS,kBAAMC,QAAAC,IAAA,CAAAf,EAAAgB,EAAA,GAAAhB,EAAAgB,EAAA,KAAAC,KAAAjB,EAAAkB,KAAA,YAAkC,CAC/EC,SALJ,WACI,OAAOf,EAAAgB,EAAAC,cAAA,4BAyBIC,UAlBf,WAEI,IAAMC,EAAW,IAAIC,IAAS,CAC1BC,KAAMC,IAAUC,eAAiB,WAAa,WAAaD,IAAUE,aAGnEC,EAAS,IAAIC,IAAa,CAC5BC,KAAMR,EACNS,OAAO,IAAIC,KAAgBC,QAAQC,OAAOC,oBAG9C,OACIhC,EAAAgB,EAAAC,cAACb,EAAA,EAAD,CAAgBqB,OAAQA,GACpBzB,EAAAgB,EAAAC,cAACT,EAAD","file":"4.screen.js","sourcesContent":["import React from \"react\";\nimport ApolloClient from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport loadable from '@loadable/component'\n\nimport configMap from 'Utilities/GetGlobals';\n// eslint-disable-next-line no-unused-vars\nimport log from 'Log';\n\n\nfunction Loading() {\n    return <div>Loading...</div>;\n  }\n\nconst LoadableMenuplanComponent = loadable(() => import('../components/Menuplan'), {\n    fallback: Loading,\n  });\n\nfunction Menuplan() {\n    // Create an http link:\n    const httpLink = new HttpLink({\n        uri: (configMap.secureProtocol ? 'https://' : 'http://') + configMap.graphqlUrl,\n    });\n\n    const client = new ApolloClient({\n        link: httpLink,// link,\n        cache: new InMemoryCache().restore(window.__APOLLO_STATE__),\n    });\n\n    return (\n        <ApolloProvider client={client}>\n            <LoadableMenuplanComponent />\n        </ApolloProvider>\n    );\n}\n\nexport default Menuplan;"],"sourceRoot":""}