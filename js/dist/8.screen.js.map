{"version":3,"sources":["webpack:///./js/src/components/MenuplanListItem.jsx","webpack:///./js/src/components/MenuplanList.jsx","webpack:///./js/src/components/Menuplan.jsx"],"names":["Image","props","react_default","a","createElement","className","src","value","image_url","data-rjs","image_url_2x","alt","title","propTypes","PropTypes","object","isRequired","MenuplanListItem","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","React","Component","weekday","image_source_url","MenuplanListItem_Image","string","MenuplanList","MenuplanList_classCallCheck","MenuplanList_possibleConstructorReturn","MenuplanList_getPrototypeOf","items","Date","getDay","map","item","components_MenuplanListItem","key","uniq_id","toString","array","Menuplan","Menuplan_classCallCheck","Menuplan_possibleConstructorReturn","Menuplan_getPrototypeOf","originSrc","String","window","location","protocol","host","classes","GET_MENUPLAN_ITEM","encodeURIComponent","gql","_templateObject","root","react_apollo_esm","query","pollInterval","configMap","defaultPollIntervall","_ref","loading","error","data","concat","message","components_MenuplanList","getMenuplanItem","withStyles","theme","flexGrow","paper","padding","spacing","unit","textAlign","color","palette","text","secondary"],"mappings":"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","file":"8.screen.js","sourcesContent":["import React from \"react\";\n\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-unused-vars\nimport log from 'Log';\n\n\nconst Image = function (props) {\n    return (\n        <div className=\"img-wrapper\">\n            <img src={props.value.image_url} data-rjs={props.value.image_url_2x} alt={props.value.title} />\n        </div>\n    );\n};\n\nImage.propTypes = {\n    value: PropTypes.object.isRequired,\n};\n\nclass MenuplanListItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        if (this.props.weekday === this.props.value.weekday) {\n            if (this.props.value.image_source_url !== '') {\n                return (\n                    <div className=\"col-3\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <Image value={this.props.value} />\n                            </div>\n                            <div className=\"col-12\">\n                                <p className=\"title\">{this.props.value.title}</p>\n                            </div>\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"col-3\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <p className=\"title\">{this.props.value.title}</p>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return '';\n        }\n    }\n}\n\nMenuplanListItem.propTypes = {\n    weekday: PropTypes.string.isRequired,\n    value: PropTypes.object.isRequired,\n};\n\nexport default MenuplanListItem;","import React from \"react\";\n\nimport PropTypes from 'prop-types';\n\nimport MenuplanListItem from './MenuplanListItem';\n\n// eslint-disable-next-line no-unused-vars\nimport log from 'Log';\n\n\nclass MenuplanList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        const items = this.props.items,\n            d = new Date(),\n            n = d.getDay();\n\n        switch (n) {\n            case 1:\n                return (\n                    <div className=\"tickercontainer\">\n                        <div className=\"mask\">\n                            <div className=\"menuplan-teaser-items-container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h3>Montag</h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {items.map((item) =>\n                                        <MenuplanListItem key={item.uniq_id.toString()} value={item} weekday=\"0\"\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case 2:\n                return (\n                    <div className=\"tickercontainer\">\n                        <div className=\"mask\">\n                            <div className=\"menuplan-teaser-items-container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h3>Dienstag</h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {items.map((item) =>\n                                        <MenuplanListItem key={item.uniq_id.toString()} value={item} weekday=\"1\"\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case 3:\n                return (\n                    <div className=\"tickercontainer\">\n                        <div className=\"mask\">\n                            <div className=\"menuplan-teaser-items-container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h3>Mittwoch</h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {items.map((item) =>\n                                        <MenuplanListItem key={item.uniq_id.toString()} value={item} weekday=\"2\"\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case 4:\n                return (\n                    <div className=\"tickercontainer\">\n                        <div className=\"mask\">\n                            <div className=\"menuplan-teaser-items-container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h3>Donnerstag</h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {items.map((item) =>\n                                        <MenuplanListItem key={item.uniq_id.toString()} value={item} weekday=\"3\"\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case 5:\n                return (\n                    <div className=\"tickercontainer\">\n                        <div className=\"mask\">\n                            <div className=\"menuplan-teaser-items-container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h3>Freitag</h3>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {items.map((item) =>\n                                        <MenuplanListItem key={item.uniq_id.toString()} value={item} weekday=\"4\"\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            default:\n                return (\n                    <div className=\"menuplan-teaser-items-container\">\n                    </div>\n                );\n        }\n    }\n}\n\nMenuplanList.propTypes = {\n    items: PropTypes.array.isRequired,\n};\n\nexport default MenuplanList;","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport MenuplanList from './MenuplanList';\n\nimport configMap from 'Utilities/GetGlobals';\n// eslint-disable-next-line no-unused-vars\nimport log from 'Log';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass Menuplan extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        const originSrc = String(window.location.protocol + \"//\" + window.location.host),\n            { classes } = this.props,\n            opts = {\n                height: '408',\n                width: '659',\n                origin: encodeURIComponent(originSrc),\n                playerVars: { // https://developers.google.com/youtube/player_parameters\n                    autoplay: 1,\n                    controls: 0\n                }\n            },\n            GET_MENUPLAN_ITEM = gql`\nquery {\n    getMenuplanItem {\n        item_id\n        uniq_id\n        title\n        weekday\n        image_source_url\n        image_url\n        image_url_2x\n    }\n}\n`;\n\n        return (\n            <div className={classes.root}>\n                <h2 className=\"main-title\">Menü</h2>\n                <Query\n                    query={GET_MENUPLAN_ITEM}\n                    pollInterval={configMap.defaultPollIntervall}\n                >\n                    {({ loading, error, data }) => {\n                        if (loading) return \"Loading...\";\n                        if (error) return `Error! ${error.message}`;\n\n                        return (\n                            <div>\n                                {\n                                    data && (\n                                        <MenuplanList items={data.getMenuplanItem} />\n                                    )\n                                }\n                            </div>\n                        );\n                    }}\n                </Query>\n            </div>\n        );\n    }\n}\n\nMenuplan.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Menuplan);"],"sourceRoot":""}