{"version":3,"sources":["webpack:///./js/src/components/ChangePassword.jsx"],"names":["CHANGE_PASSWORD","gql","ChangePasswordForm","props","state","password","passwordConfirm","token","handleInputChange","bind","handleSubmit","event","target","value","type","checked","name","setState","preventDefault","match","changePassword","variables","params","answer","history","push","React","Component","propTypes","PropTypes","func","location","object","string","ChangePassword","useState","setAnswer","useMutation","onCompleted","loading","error"],"mappings":"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","file":"3.concrete5_graphql_websocket_security_sample.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport Loading from \"./Loading\";\n// eslint-disable-next-line no-unused-vars\nimport log from \"Log\";\n\nconst CHANGE_PASSWORD = gql`\n    mutation changePassword(\n        $password: String!\n        $passwordConfirm: String!\n        $token: String!\n    ) {\n        changePassword(\n            password: $password\n            passwordConfirm: $passwordConfirm\n            token: $token\n        )\n    }\n`;\n\nclass ChangePasswordForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            password: \"\",\n            passwordConfirm: \"\",\n            token: \"\"\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value =\n            target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { match } = this.props;\n\n        this.props.changePassword({\n            variables: {\n                password: this.state.password,\n                passwordConfirm: this.state.passwordConfirm,\n                token: match.params.token\n            }\n        });\n    }\n    render() {\n        const answer = this.props.answer;\n\n        if (answer === \"\") {\n            this.props.history.push(\"/login\");\n        }\n\n        return (\n            <div className=\"forgotPassword\">\n                {answer && answer !== \"\" && (\n                    <div className=\"ccm-system-errors alert alert-danger alert-dismissable\">\n                        <button\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"alert\"\n                        >\n                            Ã—\n                        </button>\n                        <div>{answer}</div>\n                    </div>\n                )}\n                {answer === null && (\n                    <form onSubmit={this.handleSubmit}>\n                        <h4>Reset Password</h4>\n                        <div className=\"help-block\">\n                            Enter your new password below.\n                        </div>\n                        <div className=\"change-password\">\n                            <div className=\"form-group\">\n                                <label\n                                    className=\"control-label\"\n                                    htmlFor=\"uPassword\"\n                                >\n                                    New Password\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    className=\"form-control\"\n                                    autoFocus=\"autofocus\"\n                                    autoComplete=\"off\"\n                                    value={this.state.password}\n                                    onChange={this.handleInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label\n                                    className=\"control-label\"\n                                    htmlFor=\"uPassword\"\n                                >\n                                    Confirm New Password\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    name=\"passwordConfirm\"\n                                    id=\"passwordConfirm\"\n                                    className=\"form-control\"\n                                    autoComplete=\"off\"\n                                    value={this.state.passwordConfirm}\n                                    onChange={this.handleInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary\">\n                                    Change password and sign in\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </div>\n        );\n    }\n}\n\nChangePasswordForm.propTypes = {\n    changePassword: PropTypes.func,\n    location: PropTypes.object,\n    answer: PropTypes.string,\n    match: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default function ChangePassword({ match, history }) {\n    const [answer, setAnswer] = useState(null);\n    const [changePassword, { loading, error }] = useMutation(CHANGE_PASSWORD, {\n        onCompleted({ changePassword }) {\n            setAnswer(changePassword);\n        }\n    });\n    if (loading) return <Loading />;\n    if (error) return <p>An error occurred</p>;\n\n    return (\n        <ChangePasswordForm\n            changePassword={changePassword}\n            answer={answer}\n            match={match}\n            history={history}\n        />\n    );\n}\n"],"sourceRoot":""}