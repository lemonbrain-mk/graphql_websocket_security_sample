{"version":3,"sources":["webpack:///./js/src/components/Login.jsx"],"names":["LOGIN_USER","gql","LoginForm","props","state","uName","uPassword","uMaintainLogin","handleInputChange","bind","handleSignInSubmit","event","target","value","type","checked","name","setState","preventDefault","login","React","Component","propTypes","PropTypes","func","Login","client","useApolloClient","useMutation","onCompleted","log","localStorage","setItem","writeData","data","isLoggedIn","loading","error"],"mappings":"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","file":"6.concrete5_graphql_websocket_security_sample.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useApolloClient, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport Loading from \"./Loading\";\n\nimport log from \"Log\";\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)\n  }\n`;\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uName: \"\",\n      uPassword: \"\",\n      uMaintainLogin: false\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSignInSubmit = this.handleSignInSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSignInSubmit(event) {\n    event.preventDefault();\n\n    this.props.login(this.state.uName, this.state.uPassword);\n  }\n\n  render() {\n    return (\n      <div className=\"authentication-type authentication-type-concrete active\">\n        <form onSubmit={this.handleSignInSubmit}>\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"uName\">\n              Email Address\n            </label>\n            <input\n              name=\"uName\"\n              id=\"uName\"\n              className=\"form-control\"\n              autoFocus=\"autofocus\"\n              value={this.state.uName}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"uPassword\">\n              Password\n            </label>\n            <input\n              name=\"uPassword\"\n              id=\"uPassword\"\n              className=\"form-control\"\n              type=\"password\"\n              value={this.state.uPassword}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"uMaintainLogin\"\n                value=\"1\"\n                checked={this.state.uMaintainLogin}\n                onChange={this.handleInputChange}\n              />\n              Stay signed in for two weeks\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary\">Log in</button>\n            <Link\n              to=\"/login/concrete/forgot_password\"\n              className=\"btn float-right\"\n            >\n              Forgot Password\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func\n};\n\nexport default function Login() {\n  const client = useApolloClient();\n  const [login, { loading, error }] = useMutation(LOGIN_USER, {\n    onCompleted({ login }) {\n      log(login);\n      localStorage.setItem(\"token\", login);\n      client.writeData({ data: { isLoggedIn: true } });\n    }\n  });\nlog(error);\n  if (loading) return <Loading />;\n  if (error) return <p>An error occurred</p>;\n\n  return <LoginForm login={login} />;\n}\n"],"sourceRoot":""}