{"version":3,"sources":["webpack:///./js/src/components/Login.jsx"],"names":["LOGIN_USER","gql","LoginForm","props","state","uName","uPassword","uMaintainLogin","redirectToReferrer","handleInputChange","bind","handleSubmit","event","target","value","type","checked","name","setState","preventDefault","login","variables","username","password","error","React","Component","propTypes","PropTypes","func","location","object","string","Login","history","useState","errorAnswer","setError","useMutation","onCompleted","setIsLoggedIn","authToken","push","loading"],"mappings":"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","file":"6.concrete5_graphql_websocket_security_sample.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport Loading from \"./Loading\";\n\nimport { setIsLoggedIn } from \"Utils/Token\";\n// eslint-disable-next-line no-unused-vars\nimport log from \"Log\";\n\nconst LOGIN_USER = gql`\n    mutation login($username: String!, $password: String!) {\n        login(username: $username, password: $password) {\n            authToken\n            error\n        }\n    }\n`;\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uName: \"\",\n            uPassword: \"\",\n            uMaintainLogin: false,\n            redirectToReferrer: false\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value =\n            target.type === \"checkbox\" ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.props.login({\n            variables: {\n                username: this.state.uName,\n                password: this.state.uPassword\n            }\n        });\n    }\n\n    render() {\n        const error = this.props.error;\n\n        return (\n            <div className=\"authentication-type authentication-type-concrete active\">\n                {error && error !== \"\" && (\n                    <div className=\"ccm-system-errors alert alert-danger alert-dismissable\">\n                        <button\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"alert\"\n                        >\n                            Ã—\n                        </button>\n                        <div>{error}</div>\n                    </div>\n                )}\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label className=\"control-label\" htmlFor=\"uName\">\n                            Email Address\n                        </label>\n                        <input\n                            name=\"uName\"\n                            id=\"uName\"\n                            className=\"form-control\"\n                            autoFocus=\"autofocus\"\n                            value={this.state.uName}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label className=\"control-label\" htmlFor=\"uPassword\">\n                            Password\n                        </label>\n                        <input\n                            name=\"uPassword\"\n                            id=\"uPassword\"\n                            className=\"form-control\"\n                            type=\"password\"\n                            value={this.state.uPassword}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"checkbox\">\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                name=\"uMaintainLogin\"\n                                value=\"1\"\n                                checked={this.state.uMaintainLogin}\n                                onChange={this.handleInputChange}\n                            />\n                            Stay signed in for two weeks\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\">Log in</button>\n                        <Link\n                            to=\"/login/concrete/forgot_password\"\n                            className=\"btn float-right\"\n                        >\n                            Forgot Password\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nLoginForm.propTypes = {\n    login: PropTypes.func,\n    location: PropTypes.object,\n    error: PropTypes.string\n};\n\nexport default function Login({ location, history }) {\n    const [errorAnswer, setError] = useState(\"\");\n    const [login, { loading, error }] = useMutation(LOGIN_USER, {\n        onCompleted({ login }) {\n            setIsLoggedIn(login.authToken);\n\n            if (login && login.error && login.error !== \"\") {\n                setError(login.error);\n            } else if (login.authToken !== '') {\n                history.push(\"/me\");\n            }\n        }\n    });\n    if (loading) return <Loading />;\n    if (error) return <p>An error occurred</p>;\n\n    return <LoginForm login={login} error={errorAnswer} location={location} />;\n}\n"],"sourceRoot":""}